Function countStock2(path,topNum,date1,date2);
Begin
    if not path then
        return '非法路径';

    // 获取板块信息文件，计算板块总数
    bkFileList := iterDir(path);
    fileNum := length(bkFileList);

    if fileNum = 0 then
       return path + '中没有发现任何stock文件';

    // 解析板块文件，获取板块类型，板块名，股票列表
    arrBk := parseFile(bkFileList, fileNum);
    
    for date_ := date1 to date2 do
    begin
        if not spec(isTradeDay(inttodate(date_)), 'SH000001') then
            continue;
            
        setsysparam(pn_date(),inttodate(date_));

        // 计算强势板块
        bestBks := selectBestBks(arrBk);
    
        // 按强势股票数排序
        sortTableByField(bestBks, '强势股票数（三日涨幅主板 > 20%，科创板/创业板 > 30%）', 0);

        storeBestBk(date_, bestBks);
        
        // 计算强势个股
        bestStocks := selectBestStocks(date_, arrBk, bestBks, topNum);
    
        // 按涨幅排序
        sortTableByField(bestStocks, '截至今日总涨幅', 0);

        storeStock(date_, bestStocks);
    end
End;

// 计算哪些板块涨幅大的个股数量多
Function selectBestBks(arrBk);
Begin
    ret := array();
    bkNum := length(arrBk);
    for i := 0 to bkNum - 1 do
    begin
        bkInfo := arrBk[i];
        ret[i]['板块类型'] := bkInfo['bkType'];
        ret[i]['板块名称'] := bkInfo['bkName'];
        ret[i]['强势股票数（三日涨幅主板 > 20%，科创板/创业板 > 30%）'] := 0;
        ret[i]['股票总数'] := 0;
        ret[i]['index'] := i;
        stocks := bkInfo['stocks'];
        stockNum := length(stocks);
        
        for j := 0 to stockNum - 1 do
        begin
            if not stocks[j] then
                continue;
                
            stock := str2array(stocks[j], ":");
            stkName := stock[0];
            stkCode := stock[1];

            if stkName[1:2] = 'ST' or stkName[2:3] = 'ST' then
                continue;

            ret[i]['股票总数'] += 1;
            stkClose := spec(close(), stkCode);
            stkClose3 := spec(ref(close(), 3), stkCode);
            
            incRate := 1.18;
            if stkCode[1:2] = '68' or stkCode[1] = '3' then
                incRate := 1.25;

            if stkClose3 > 0 and stkClose >= stkClose3 * incRate then
                ret[i]['强势股票数（三日涨幅主板 > 20%，科创板/创业板 > 30%）'] += 1;
        end
        
        ret[i]['强势股票占比'] := 0;
        if ret[i]['股票总数'] > 0 then
           ret[i]['强势股票占比'] := ret[i]['强势股票数（三日涨幅主板 > 20%，科创板/创业板 > 30%）'] / ret[i]['股票总数'];
    end
    return ret;
End;

// 计算单个板块中的强势个股
Function selectBestStocks(date_, arrBk, bestBks, topNum);
Begin
    ret := array();
    bkNum := length(arrBk);
    for i := 0 to topNum - 1 do
    begin
        idx := bestBks[i]['index'];
        bkInfo := arrBk[idx];
        stocks := bkInfo['stocks'];
        stockNum := length(stocks);

        for j := 0 to stockNum - 1 do
        begin
            if not stocks[j] then
                continue;

            stock := str2array(stocks[j], ":");
            stkName := stock[0];
            stkCode := stock[1];

            if stkName[1:2] = 'ST' or stkName[2:3] = 'ST' then
                continue;
                
            if not spec(IsTradeDay(inttodate(date_)), stkCode) then
                continue;

            avg_amount := spec(ma(amount(),3), stkCode);
            if avg_amount < 300000000 then
                continue;

            close1 := spec(close(), stkCode);
            close2 := 0;
            avg := 0;
            last_blow_avg5_date := '';
            k := 0;

            while True do
            begin
                var1 := spec(ref(close(), k), stkCode);
                
                // 该股票当日还未上市
                if var1 = 0 then
                    break;
                    
                var2 := spec(ref(ma(close(),5), k), stkCode);
                
                if var1 < var2 then
                begin
                    close2 := var1;
                    last_blow_avg5_date := DateToStr((StockEndTPrevNDay(inttodate(date_), k)));
                    avg := var2;
                    break;
                end
                    
                k += 1;
            end
            
            if close2 > 0 and close1 > close2 then
               ret &= array(('股票名称':stkName+'('+stkCode+')', '所属板块':bkInfo['bkName'], '今日收盘价':close1, '最近一次低于5日均线的收盘价': close2,
                '最近一次低于5日均线的日期':last_blow_avg5_date, '截至今日总涨幅':(close1-close2)/close2, '3日平均成交额（万元）':avg_amount/10000));
        end
    end
    return ret;
End;

// 遍历目录中的stock文件
Function iterDir(dirPath);
Begin
    arrFiles := rdo2 filelist("", dirPath + '\\*.stock');
    result := array();
    for i := 0 to length(arrFiles) - 1 do
    begin
        result[i] := dirPath + '\\' + arrFiles[i]['FileName'];
    end
    return result;
End;

Function parseFile(stockFileList, fileNum);
begin
    skips := array('融资融券', '预盈预增', '富时罗素', '创业板综', '标准普尔',
        '机构重仓', '深股通', '预亏预减', '沪股通', 'MSCI中国', '中证500',
        '深成500', '上证380', 'HS300_', 'QFII重仓', '上证180_', '深证100R',
        'B股', '央视50_', '上证50_');
        
    retArray := array();
    for i := 0 to fileNum - 1 do
    begin
        fileName := str2array(stockFileList[i], '\\')[3];
        arr := str2array(fileName, '.');
        bkType := arr[0];
        bkName := arr[1];
        
        if bkName in skips then
           continue;

        size := rdo2 filesize("", stockFileList[i]);
        retRead := rdo2 readFile(rwraw(), "", stockFileList[i], 0, size, data);
        if not retRead or not data then
            continue;

        stocks := str2array(data, ";");
        retArray &= array(('bkType':bkType, 'bkName':bkName, 'stocks': stocks));
    end
    return retArray;
End;

Function storeBestBk(date_, bestBks);
begin
    bestBks2 := bestBks;
    DeleteColumnByField(bestBks2, 'index');
    fileName := 'D:\\强势板块\\' + IntToStr(date_) + '.xls';
    rdo2 exportfile(ftxls(), "", fileName, bestBks2);
end;

Function storeStock(date_, bestStocks);
begin
    arr := array();
    for i := 0 to length(bestStocks) - 1 do
    begin
        arr[bestStocks[i]['股票名称']] := array();
    end
    
    for i := 0 to length(bestStocks) - 1 do
    begin
        bkName := bestStocks[i]['所属板块'];
        arr[bestStocks[i]['股票名称']] &= array(bkName);
    end
    
    for i := 0 to length(bestStocks) - 1 do
    begin
        bestStocks[i]['所属板块'] := array2str(arr[bestStocks[i]['股票名称']]);
    end

    bestStocks := select distinct * from bestStocks end;

    fileName := 'D:\\强势股票\\' + IntToStr(date_) + '.xls';
    rdo2 exportfile(ftxls(), "", fileName, bestStocks);
end;
